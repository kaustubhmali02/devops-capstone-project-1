---
- hosts: servers
  become: true
  name: Installing required (Java) softwares in all machines
  tasks:

    - name: Installing Java
      ansible.builtin.apt:
        name: openjdk-8-jdk
        state: latest
        install_recommends: yes


- hosts: jenkins_master
  become: true
  name: Installing Jenkins on jenkins-server
  tasks:

    - name: Add Jenkins GPG apt Key
      ansible.builtin.apt_key:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
        state: present 

    - name: Configureing Jenkins repository is configured
      ansible.builtin.apt_repository: 
        repo: 'deb https://pkg.jenkins.io/debian-stable binary/'
        state: present

    - name: ensure jenkins is installed
      ansible.builtin.apt: 
        name: jenkins 
        update_cache: yes
        state: latest

    - name: Enabling jenkins service
      ansible.builtin.service:
        name: jenkins
        enabled: yes
        state: started

    - name: Making jenkins directory
      ansible.builtin.file:
        path: /var/lib/jenkins/.ssh
        owner: jenkins
        group: jenkins
        state: directory
        mode: 0777
      notify:
        name: Creating known_hosts file
    
    - name: Creating known_hosts file
      ansible.builtin.file:
        path: /var/lib/jenkins/.ssh/known_hosts
        state: touch
        mode: 0700
        owner: jenkins
        group: jenkins

    - name: Add public key from backups_host  
      ansible.builtin.known_hosts:
        name: {{ worker_nodes }}
        path: /var/lib/jenkins/.ssh/known_hosts
        state: present
        key: "{{ public_key_data.stdout }}"
    
- hosts: worker_nodes
  become: true
  name: Installing required (Nginx) softwares in worker_nodes
  tasks:

    - name: Installing Nginx softwares
      ansible.builtin.apt:
        name: nginx
        state: latest
        install_recommends: yes

    - name: Enabling nginx service
      ansible.builtin.service:
        name: nginx
        enabled: yes
        state: started

    - name: Creates directory "/var/www/html"
      ansible.builtin.file:
        path: /var/www/html
        state: directory
        mode: 0777

    - name: Add Docker GPG apt Key
      ansible.builtin.apt_key:
        url: https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }}/gpg
        state: present
    
    - name: Add Docker into sources list
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ansible_distribution_release}} stable
        state: present
        filename: docker

    - name: Update apt and install docker-ce
      ansible.builtin.apt: 
        update_cache: yes 
        name: "{{ item }}" 
        state: latest
      loop: 
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Enabling docker service
      ansible.builtin.service:
        name: docker
        enabled: yes
        state: started
    
    - name: Creating Jenkins User
      ansible.builtin.user:
        name: jenkins
        groups: 
          - docker 
          - sudo
        append: yes
        state: present
        home: /home/jenkins
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
        ssh_key_type: rsa
    
    - name: Creating authorize_keys ssh_key_file
      ansible.builtin.file:
        path: /home/jenkins/.ssh/authorized_keys
        state: touch
        mode: 0700
        owner: jenkins
        group: jenkins

    # - name: Fetching public ssh key to root folder
    #   ansible.builtin.fetch:
    #     src: /home/jenkins/.ssh/id_rsa.pub
    #     dest: /copied-pubkeys
        
    # - name: Copying keys to the remote .ssh/authorized_keys file
    #   ansible.builtin.copy:
    #     src: 

    # - name: Copying remote .ssh/id_rsa.pub to .ssh/authorized_keys
    #   become_user: root
    #   ansible.posix.authorized_key:
    #     user: root
    #     state: present
    #     key: "{{ lookup('file', '/home/jenkins/.ssh/id_rsa.pub') }}"

    - name: Fetch public key data from worker_nodes
      ansible.builtin.command: cat /home/jenkins/.ssh/authorized_keys
      delegate_to: "{{ worker_nodes }}"
      register: public_key_data
      notify: Add public key from backups_host
