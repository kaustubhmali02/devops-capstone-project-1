---
- hosts: servers
  become: true
  name: Installing required (Java) softwares in all machines
  tasks:

    - name: Installing Java
      ansible.builtin.apt:
        name: openjdk-8-jdk
        state: latest
        install_recommends: yes


- hosts: jenkins_master
  become: true
  name: Installing Jenkins on jenkins-server
  tasks:

    - name: Add Jenkins GPG apt Key
      ansible.builtin.apt_key:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
        state: present 

    - name: Configureing Jenkins repository is configured
      ansible.builtin.apt_repository: 
        repo: 'deb https://pkg.jenkins.io/debian-stable binary/'
        state: present

    - name: ensure jenkins is installed
      ansible.builtin.apt: 
        name: jenkins 
        update_cache: yes
        state: latest

    - name: Enabling jenkins service
      ansible.builtin.service:
        name: jenkins
        enabled: yes
        state: started

    - name: Making jenkins directory
      ansible.builtin.file:
        path: /var/lib/jenkins/.ssh
        owner: jenkins
        group: jenkins
        state: directory
        mode: 0777
    
    - name: Creating known_hosts file
      ansible.builtin.file:
        path: /var/lib/jenkins/.ssh/known_hosts
        state: touch
        mode: 0700
        owner: jenkins
        group: jenkins
      run_once: true

    # - name: scan and register  
    #   command: "ssh-keyscan {{ ansible_host | default(woker)}}"  
    #   register: "host_keys"  
    #   changed_when: false
      
    
- hosts: worker_nodes
  become: true
  name: Installing required (Nginx) softwares in worker_nodes
  tasks:

    - name: Installing Nginx softwares
      ansible.builtin.apt:
        name: nginx
        state: latest
        install_recommends: yes

    - name: Enabling nginx service
      ansible.builtin.service:
        name: nginx
        enabled: yes
        state: started

    - name: Creates directory "/var/www/html"
      ansible.builtin.file:
        path: /var/www/html
        state: directory
        mode: 0777

    - name: Add Docker GPG apt Key
      ansible.builtin.apt_key:
        url: https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }}/gpg
        state: present
    
    - name: Add Docker into sources list
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ansible_distribution_release}} stable
        state: present
        filename: docker

    - name: Update apt and install docker-ce
      ansible.builtin.apt: 
        update_cache: yes 
        name: "{{ item }}" 
        state: latest
      loop: 
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Enabling docker service
      ansible.builtin.service:
        name: docker
        enabled: yes
        state: started
    
    - name: Creating Jenkins User
      ansible.builtin.user:
        name: jenkins
        shell: /bin/bash
        groups: 
          - docker 
          - sudo
        append: yes
        state: present
        home: /home/jenkins
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
        ssh_key_type: rsa
      register: jenkins

    - name: Add jenkins user to the sudoers
      ansible.builtin.copy:
          dest: "/etc/sudoers.d/devops"
          content: "jenkins  ALL=(ALL)  NOPASSWD: ALL"
    
    - name: Set authorized key
      authorized_key: 
        user: jenkins
        key: "{{ jenkins.ssh_public_key }}"
        state: present

    - name: Changing the mode of authorize_keys file
      ansible.builtin.file:
        path: /home/jenkins/.ssh/authorized_keys
        mode: 0700
        owner: jenkins
        group: jenkins
    
   # Forcing users to create a password on first login for jenkins
    - name: Unlock password for jenkins user and set it to empty
      command: passwd -d jenkins

    - name: Expire password
      command: chage -d 0 jenkins
  
   # Download Maven and Configure the path
    - name: Download Apache Maven 
      ansible.builtin.get_url: 
        url: https://downloads.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz
        dest: /opt/apache-maven-3.8.5-bin.tar.gz

    - name: Creates Maven directory
      ansible.builtin.file:
        path: /opt/apache-maven-3.8.5
        state: directory

    - name: Untar Maven 
      ansible.builtin.shell: 
        chdir: /opt
        cmd: tar -zxf apache-maven-3.8.5-bin.tar.gz -C /opt/apache-maven-3.8.5
    
    - name: Update path for maven use
      ansible.builtin.command: export PATH=/opt/apache-maven-3.8.5/bin:$PATH
